<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:ldap="http://www.springframework.org/schema/ldap"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd


	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd


	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-2.5.xsd

	http://www.springframework.org/schema/ldap
	http://www.springframework.org/schema/ldap/spring-ldap.xsd
	">

    <bean id="placeholderConfig"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:application.properties</value>
        </property>
        <property name="systemPropertiesModeName">
            <value>SYSTEM_PROPERTIES_MODE_OVERRIDE</value>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>

    <context:component-scan base-package="br.reservarecursos"/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="jadira.usertype.autoRegisterUserTypes">true</prop>
                <prop key="jadira.usertype.databaseZone">jvm</prop>
                <prop key="jadira.usertype.javaZone">jvm</prop>
                <!--<prop key="jadira.usertype.autoRegisterUserTypes">true</prop>-->
            </props>
        </property>
        <property name="packagesToScan" value="br.reservarecursos.entities"/>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass">
            <value>${jdbc.driver}</value>
        </property>
        <property name="jdbcUrl">
            <value>${jdbc.url}</value>
        </property>
        <property name="user">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <property name="minPoolSize">
            <value>${c3p0.minPoolSize}</value>
        </property>
        <property name="maxPoolSize">
            <value>${c3p0.maxPoolSize}</value>
        </property>
        <property name="checkoutTimeout">
            <!-- Give up waiting for a connection after this many milliseconds -->
            <value>${c3p0.checkoutTimeout}</value>
        </property>
        <property name="maxIdleTime">
            <value>${c3p0.maxIdleTime}</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>${c3p0.idleConnectionTestPeriod}</value>
        </property>
        <property name="automaticTestTable">
            <value>${c3p0.automaticTestTable}</value>
        </property>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${email.host}"/>
        <property name="port" value="${email.port}"/>
        <property name="username" value="${email.username}"/>
        <property name="password" value="${email.password}"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.ssl.trust">${email.host}</prop>
            </props>
        </property>
    </bean>

    <bean id="dbTeste" class="java.lang.Boolean">
        <constructor-arg value="${db.teste}"/>
    </bean>

    <bean id="restLigar" class="java.lang.Boolean">
        <constructor-arg value="${rest.ligar}"/>
    </bean>

    <!-- LDAP -->
    <bean id="ldapLigado" class="java.lang.Boolean">
        <constructor-arg value="${ldap.ligado}"/>
    </bean>


    <ldap:context-source
            url="${ldap.url}"
            base="${ldap.base}"
            username="${ldap.username}"
            password="${ldap.password}" />

    <ldap:ldap-template id="ldapTemplate" />

    <bean id="personRepo" class="br.reservarecursos.ldap.PersonRepo">
        <property name="ldapTemplate" ref="ldapTemplate" />
    </bean>

    <bean id="ldapAtualizacaoAutomatica" class="java.lang.Boolean">
        <constructor-arg value="${ldap.atualizacao_automatica}"/>
    </bean>

    <bean id="atualizador" class="br.reservarecursos.ldap.Atualizador"></bean>

    <bean id="runAtualizador"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="atualizador" />
        <property name="targetMethod" value="atualizarUsuarios" />
    </bean>

    <bean id="minhaTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="runAtualizador"/>
        <property name="startDelay" value="2000"/>
        <property name="repeatInterval" value="5000"/>
    </bean>

    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="runAtualizador" />
        <property name="cronExpression" value="0 59 23 * * ?" />
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger" />
            </list>
        </property>
    </bean>

</beans>